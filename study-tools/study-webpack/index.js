/**
 * webpack
 *  1. 前端框架虽然多，但是基本上都无法直接运行，必须通过转换后才可以正常运行。所以就需要构建。
 *  2. 构建是做什么事情呢？
 *     代码转换：TypeScript 编译成 JavaScript、SCSS 编译成 CSS 等。
 *     文件优化：压缩 JavaScript、CSS、HTML 代码，压缩合并图片等。
 *     代码分割：提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。
 *     模块合并：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。
 *     自动刷新：监听本地源代码的变化，自动重新构建、刷新浏览器。
 *     代码校验：在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。
 *     自动发布：更新完代码后，自动构建出线上发布代码并传输给发布系统。
 *  3. 大多数的构建工具都是使用node.js开发的。主要有如下几个：
 *     Npm Script：是一个任务执行者，内置在npm里，允许使用script字段定义任务。
 *                 script字段是一个对象，每个属性对应一段shell脚本。
 *     Grunt：是一个任务执行者，能够管理任务之间的依赖关系，自动化执行依赖，需要写配置文件。
 *     Gulp：是一个基于流的自动化构建工具，支持监听文件、读写文件。
 *     Fis3：来自百度的国产优秀构建工具，集成了Web开发中常用构建功能。
 *     Webpack：是一个打包模块化js工具，一切皆模块。
 *     Rollup：与webpack类似，但是专注ES6。
 */